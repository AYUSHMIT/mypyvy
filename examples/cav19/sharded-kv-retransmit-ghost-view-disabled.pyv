sort key
sort value
sort node

sort seqnum

mutable relation table(node, key, value)
mutable relation unacked(node, node, key, value, seqnum)
mutable relation owner(node, key)
mutable relation transfer_msg(node, node, key, value, seqnum)
mutable relation ack_msg(node, node, seqnum)
mutable relation seqnum_sent(node, seqnum)
mutable relation seqnum_recvd(node, node, seqnum)

init !table(N, K, V)
init !transfer_msg(SRC, DST, K, V, S)
init owner(N1, K) & owner(N2, K) -> N1 = N2

init !unacked(SRC, DST, K, V, S)
init !ack_msg(SRC, DST, S)
init !seqnum_sent(N, S)
init !seqnum_recvd(N, SENDER, S)

# ghost
mutable relation owned(key)
init owned(K)

mutable relation transferring(key)
init !transferring(K)

transition reshard(n_old: node, n_new: node, k: key, v: value, s: seqnum)
  modifies table, owner, seqnum_sent, transfer_msg, unacked, owned, transferring
  table(n_old, k, v) &
  !seqnum_sent(n_old, s) &
  (new(seqnum_sent(N, S)) <-> seqnum_sent(N, S) | N = n_old & S = s) &
  (new(table(N, K, V)) <-> table(N, K, V) & !(N = n_old & K = k & V = v)) &
  (new(owner(N, K)) <-> owner(N, K) & !(N = n_old & K = k)) &
  (new(transfer_msg(N1, N2, K, V, S)) <-> transfer_msg(N1, N2, K, V, S) | N1 = n_old & N2 = n_new & K = k & V = v & S = s) &
  (new(unacked(N1, N2, K, V, S)) <-> unacked(N1, N2, K, V, S) | N1 = n_old & N2 = n_new & K = k & V = v & S = s) &
  (new(owned(K)) <-> owned(K) & K!=k) &
  (new(transferring(K)) <-> transferring(K) | K=k)

transition drop_transfer_msg(src: node, dst: node, k: key, v: value, s: seqnum)
  modifies transfer_msg
  transfer_msg(src, dst, k, v, s) &
  (new(transfer_msg(N1, N2, K, V, S)) <-> transfer_msg(N1, N2, K, V, S) & !(N1 = src & N2 = dst & K = k & V = v & S = s))

transition retransmit(src: node, dst: node, k: key, v: value, s: seqnum)
  modifies transfer_msg
  unacked(src, dst, k, v, s) &
  (new(transfer_msg(N1, N2, K, V, S)) <-> transfer_msg(N1, N2, K, V, S) | N1 = src & N2 = dst & K = k & V = v & S = s)

transition recv_transfer_msg(src: node, n: node, k: key, v: value, s: seqnum)
  modifies seqnum_recvd, table, owner, owned, transferring
  transfer_msg(src, n, k, v, s) &
  !seqnum_recvd(n, src, s) &
  (new(seqnum_recvd(N1, N2, S)) <-> seqnum_recvd(N1, N2, S) | N1 = n & N2 = src & S = s) &
  (new(table(N, K, V)) <-> table(N, K, V) | (N = n & K = k & V = v)) &
  (new(owner(N, K)) <-> owner(N, K) | N = n & K = k) &
  (new(owned(K)) <-> owned(K) | K=k) &
  (new(transferring(K)) <-> transferring(K) & K!=k)

transition send_ack(src: node, n: node, k: key, v: value, s: seqnum)
  modifies ack_msg
  transfer_msg(src, n, k, v, s) &
  seqnum_recvd(n, src, s) &
  (new(ack_msg(N1, N2, S)) <-> ack_msg(N1, N2, S) | N1 = src & N2 = n & S = s)

transition drop_ack_msg(src: node, dst:node, s: seqnum)
  modifies ack_msg
  ack_msg(src, dst, s) &
  (new(ack_msg(N1, N2, S)) <-> ack_msg(N1, N2, S) & !(N1 = src & N2 = dst & S = s))

transition recv_ack_msg(src: node, dst: node, s: seqnum)
  modifies unacked
  ack_msg(src, dst, s) &
  (!(N1 = src & N2 = dst & S = s) -> (new(unacked(N1, N2, K, V, S)) <-> unacked(N1, N2, K, V, S))) &
  (!new(unacked(src, dst, K, V, s)))

transition put(n: node, k: key, v: value)
  modifies table
  owner(n, k) &
  (!(N = n & K = k) -> (new(table(N, K, V)) <-> table(N, K, V))) & 
  (new(table(n, k, V)) <-> V = v)


immutable constant qk: key

safety owned(qk) | transferring(qk)
safety table(N1, qk, V1) & table(N2, qk, V2) -> N1 = N2 & V1 = V2

invariant owned(qk) -> (owner(N1, qk) & owner(N2, qk) -> N1 = N2)
invariant owned(qk) -> (!(transfer_msg(SRC, DST, qk, V, S) & !seqnum_recvd(DST, SRC, S)))
invariant owned(qk) -> (table(N, qk, V) -> owner(N, qk))
invariant owned(qk) -> (table(N1, qk, V1) & table(N2, qk, V2) -> N1 = N2 & V1 = V2)
invariant owned(qk) -> (!(unacked(SRC, DST, qk, V, S) & !seqnum_recvd(DST, SRC, S)))

invariant transferring(qk) -> !owner(N, qk)
invariant transferring(qk) -> (transfer_msg(SRC1, DST1, qk, V1, S1) & !seqnum_recvd(DST1, SRC1, S1) & transfer_msg(SRC2, DST2, qk, V2, S2) & !seqnum_recvd(DST2, SRC2, S2) -> SRC1 = SRC2 & DST1 = DST2 & V1 = V2 & S1 = S2)
invariant transferring(qk) -> (table(N, qk, V) -> owner(N, qk))
invariant transferring(qk) -> (transfer_msg(SRC1, DST1, qk, V1, S1) & !seqnum_recvd(DST1, SRC1, S1) & unacked(SRC2, DST2, qk, V2, S2) & !seqnum_recvd(DST2, SRC2, S2) -> SRC1 = SRC2 & DST1 = DST2 & V1 = V2 & S1 = S2)
invariant transferring(qk) -> (unacked(SRC1, DST1, qk, V1, S1) & !seqnum_recvd(DST1, SRC1, S1) & unacked(SRC2, DST2, qk, V2, S2) & !seqnum_recvd(DST2, SRC2, S2) -> SRC1 = SRC2 & DST1 = DST2 & V1 = V2 & S1 = S2)